数据库事务：
	事务是一个操作序列，这些操作要么全执行，要么全部不执行，是一个补课分割的工作单元
	
原子性：是一个原子操作

一致性：在事务的开始和完成，数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改，以保证数据的完整性。事务结束时，所有的内部数据结构(如B数索引或双向链表)也都必须是正确的

隔离性：保证事务在不受外部并发操作影响的“独立”环境执行。这意味着事务的处理过程中的中间状态对外部是不可见的

持久性：事务完成之后，它对于数据的修改时永久性的，即使出现系统故障也能保持



脏读、不可重复读、幻读：(并发一致性问题)：

	脏读：事务t1更新了一行记录内容，但并没有提交修改。事务t2读取更新后的行，t1执行回滚操作。t2读取的就无效了(一个事务读取了另一个事务未提交的数据)
	
	不可重复读：事务t1读取了一行记录，紧接着t2修改了t1刚读取的那一行数据，然后t1再次读取这行记录，发现与刚才读取的结果不同(一个事务读到另一个事务已经提交修改的数据)	
		
	幻读：事务t1读取一个结果集，然后t2事务在t1结果集范围内插入一行记录。然后t1再次对表进行检索，发现多了t2插入的数据(读取到另一个事务新添加的数据)


事务隔离级别：

	串行化(没有并发一致性问题)：所有事务一个接一个的执行，可以避免幻读。对于基于锁来实现并发数据库来说，串行化要求在执行范围查询的时候，需要获取范围锁，如果不是基于锁实现并发控制的数据库，则检查到有违反串行操作的事务时，需要回滚该事务
	
	可重复读(幻读)：所有被select获取的数据都不能被修改，这样就可以避免一个事务前后读取不一致的情况，但是没办法控制幻读。其他事务可以增加数据
	
	读已提交(幻读、不可重复读)：被读取的数据可以被其他事务修改，这样可能导致不可重复读
	
	读未提交(脏读、不可重复读、幻读)：允许其他事务看到没有提交的数据，会导致脏读